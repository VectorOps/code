# Default Vocode configuration
ui:
#  log_level: debug
variables:
  LLM_DISCOVERY_MODEL: openai/gpt-5-mini
  LLM_ARCHITECT_MODEL: openai/gpt-5
  LLM_CODER_MODEL: openai/gpt-5-mini
#  LLM_DISCOVERY_MODEL: gemini/gemini-2.5-flash
#  LLM_ARCHITECT_MODEL: gemini/gemini-2.5-pro
#  LLM_CODER_MODEL: gemini/gemini-2.5-flash
#  LLM_DIFF_FORMAT: patch
tools:
  - name: vectorops_read_files
    auto_approve: true
  - name: vectorops_summarize_files
    auto_approve: true
  - name: vectorops_list_files
    auto_approve: true
  - name: vectorops_search
    auto_approve: true
workflows:
  architect:
    description: "End-to-end development loop: discover requirements, design a plan, write code, apply patches, and run tests with retries."
    nodes:
      - name: prompt
        type: input
        message: Enter your request
        confirmation: auto
        hide_final_output: true
        outcomes:
          - name: done
      - $include:
          template: nodes/discovery.yaml
        max_runs: 1
        function_tokens_pct: 25
        confirmation: auto
      - $include:
          template: nodes/architect.yaml
        tools:
          - vectorops_summarize_files
          - vectorops_read_files
        preprocessors:
          - name: file_read
            paths:
              - AGENTS.md
        function_tokens_pct: 25
        reset_policy: keep_results
      - $include:
          template: nodes/coder.yaml
        tools:
          - vectorops_read_files
        confirmation: auto
      - $include:
          template: nodes/apply_patch.yaml
        confirmation: auto
      - name: test
        type: exec
        command: uv run pytest -q -rf ./tests/
        timeout_s: 300
        expected_return_code: 0
        message: "All changes were successfully applied. Unit test results are below:"
        confirmation: auto
        outcomes:
          - name: success
          - name: fail
    edges:
      - prompt.done -> discovery
      - discovery.done -> architect
      - architect.done -> coder
      - coder.done -> apply
      - apply.success -> test
      - apply.fail -> coder:keep_state
      - test.success -> prompt
      - test.fail -> architect:keep_state
  diff:
    description: "Create a high-level plan/diff for the request without applying changes."
    nodes:
      - name: prompt
        type: input
        message: Enter your request
        confirmation: auto
        outcomes:
          - name: done
      - $include:
          template: nodes/architect.yaml
        model: gpt-5-mini
      - name: finish
        type: noop
    edges:
      - prompt.done -> architect
      - architect.done -> finish
  # Aider-like explicit coder loop
  coder:
    description: "Interactive coder loop that plans, edits files, applies patches, and runs tests, keeping state between iterations."
    nodes:
      - name: prompt
        type: input
        message: Enter your request
        confirmation: auto
        hide_final_output: true
        outcomes:
          - name: done
      - $include:
          template: nodes/file_state.yaml
          skip: true
      - $include:
          template: nodes/architect.yaml
          reset_policy: keep_state
        preprocessors:
          - name: file_state
            mode: user
          - name: file_read
            paths:
              - AGENTS.md
      - $include:
          template: nodes/coder.yaml
        confirmation: auto
      - $include:
          template: nodes/apply_patch.yaml
        confirmation: auto
      - name: test
        type: exec
        command: uv run pytest -q -rf ./tests/
        timeout_s: 300
        expected_return_code: 0
        message: "Tests results below:"
        confirmation: auto
        outcomes:
          - name: success
          - name: fail
    edges:
      - prompt.done -> architect
      - architect.done -> coder
      - coder.done -> apply
      - apply.success -> test
      - apply.fail -> coder:keep_state
      - test.success -> prompt
      - test.fail -> architect:keep_state
  # Ask
  ask:
    description: "Q&A workflow for repository analysis and explanations using search and file tools."
    nodes:
      - name: prompt
        type: input
        message: Enter your request
        confirmation: auto
        hide_final_output: true
        outcomes:
          - name: done
      - $include:
          template: nodes/analyst.yaml
        tools:
          - vectorops_search
          - vectorops_summarize_files
          - vectorops_read_files
    edges:
      - prompt.done -> analyst
      - analyst.done -> prompt
  idler:
    description: "Timing/debug workflow that sleeps and emits debug info for sanity checks."
    nodes:
      - name: prompt
        type: input
        message: Enter your request
        confirmation: auto
        outcomes:
          - name: done
      - name: pause
        type: noop
        sleep_seconds: 5
        outcomes:
          - name: done
      - name: debug
        type: debug
        outcomes:
          - name: done
      - name: pause2
        type: noop
        sleep_seconds: 5
        outcomes:
          - name: done
      - name: done
        type: noop
        confirmation: auto
    edges:
      - prompt.done -> pause
      - pause.done -> debug
      - debug.done -> pause2
      - pause2.done -> done
  patcher:
    description: "Quick patch loop: generate a patch and apply it repeatedly without running tests."
    nodes:
      - name: prompt
        type: input
        message: Enter your request
        confirmation: auto
        hide_final_output: true
        outcomes:
          - name: done
      - $include:
          template: nodes/coder.yaml
      - $include:
          template: nodes/apply_patch.yaml
        confirmation: auto
      - name: finish
        type: noop
    edges:
      - prompt.done -> coder
      - coder.done -> apply
      - apply.success -> prompt
      - apply.fail -> coder:keep_state
  apply:
    description: "Apply a provided patch/diff directly without invoking an LLM."
    nodes:
      - name: prompt
        type: input
        message: Enter your request
        confirmation: auto
        hide_final_output: true
        outcomes:
          - name: done
      - $include:
          template: nodes/apply_patch.yaml
        confirmation: auto
      - name: finish
        type: noop
    edges:
      - prompt.done -> apply
      - apply.success -> prompt
      - apply.fail -> prompt
  chat:
    description: "General chat assistant that can also browse and read repository files when needed."
    nodes:
      - name: prompt
        type: input
        message: Enter your request
        confirmation: auto
        hide_final_output: true
        system: |
          You're friendly chat assistant. Take user prompts and provide necessary answers.
        outcomes:
          - name: done
      - name: llm
        type: llm
        model: ${LLM_ARCHITECT_MODEL}
        reset_policy: keep_state
        tools:
          - vectorops_summarize_files
          - vectorops_read_files
          - vectorops_search
        outcomes:
          - name: done
    edges:
      - prompt.done -> llm
      - llm.done -> prompt
