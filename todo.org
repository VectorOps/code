#+title: Code TODO
* [ ] Cleanup and optimizations
** [X] Autocompleters needs consts at model level
* [ ] Documentation
** [ ] Architecture
** [ ] Configuration
** [ ] Nodes
** [ ] Tools
** [ ] Know
** [ ] Preprocessors
** [ ] Changing
** [ ] Contribution rules
* [ ] Preprocessors
** [ ] Figure out a way to print warnings or logs
* [ ] Runner
** [ ] [#A] Add a way to restrict number of loops when cycling
** [X] Add a way to tell how many times node can be executed and skip if more times have passed
** [ ] Add a way to raise error and stop the runner. User should be able to try and continue the runner.
* [ ] Configuration
** [ ] Add a way to fully disable know integration
** [ ] Figure out why confirmation override for discovery did not work
** [ ] Tweak architect prompts to not provide solution if there are questions to answer or user explicitly requests one shot solution
** [ ] [#A] Tweak prompt for discovery to only work with existing files
Concrete example: files that were read and already in context.
** [ ] Rewrite system prompt for analyst node
* [ ] UI protocol
** [ ] Add syntax name hint to apply formatting
* [ ] [#A] Nested workflows support
** [X] Create API to start a new workflow
** [ ] Create a tool that allows LLMs to call into new workflows
*** [X] Add a way for tools to request workflow executions
*** [ ] Create configuration for nested workflows that are registered as tools
** [X] Create node that starts a workflow with an input
** [ ] Extend UI support to show workflow stacking
* [ ] Error handling
** [ ] Add exception handlers
*** [ ] Runner
*** [ ] UI
** [ ] Tool calling timeouts and failures
** [ ] Add a way for human to unblock failures by retrying last operation
** [ ] Running another workflow from workflow causes this error to be printed:
Unclosed client session
client_session: <aiohttp.client.ClientSession object at 0x131801dc0>
* [ ] Terminal UI
** [ ] Figure out a way to avoid showing nested output for workflow (tool calls, etc)
*** [ ] Ideas
- Group messages to current workflow by name
- Workflow can have display mode
- Have a way to accumulate messages without printing
- If input is requested for one of the messages and output is hidden for workflow - need to show output
  and ask for user input
- If workflow is visible - print immediately
- Create helper that takes in formatted text and accumulates / prints it
*** [ ] Add a hotkey to show collapsed output
** [ ] Figure our a way to run a shell command and pass its output as a response back to the workflow from UI. For example, running linter or test manually.
** [ ] Better visual separation of prompts vs responses
** [ ] When final message is printed, we need to add an extra linebreak. Also, validate streaming line splits with bottom toolbar - it seems to be broken.
** [ ] Disable know warnings, they mess up UI output
** [ ] Animation does not always start after providing feedback message back to Node
** [ ] Better multi-line inputs, don't require esc+enter to send
** [ ] Show how long individual steps took, in seconds
** [ ] Continue after stopping does not show agent output upon response, but it's there
** [ ] Simple styling
*** [ ] Simple animations
** [ ] Format tool calls
*** [ ] Add a way (tab?) to expand/collapse JSON
*** [ ] Require all tool calls from LLM to have description (Key Objective)
** [X] We might have deadlock somewhere that does not break with ctrl+c
** [ ] Fix estimated cost calculation
* [ ] Block parsers
** [ ] Diff parsers
*** [ ] Patch format
**** [ ] Fix scenario when multiple similar blocks are being updated one after another
*** [ ] Better error reporting for unmatched blocks. Currently it's too verbose.
*** [ ] Unified Diff format
* [ ] Nodes
** [ ] Add a node that injects files in context. Add file manager.
** [ ] LLM node
*** [X] If call does not have correct payload that's not JSON - should respond back with an error immediately
*** [ ] Report tool token usage
*** [ ] Report % token usage
**** [ ] Fix it to get input limit
*** [ ] Add tool calling budgets (number of calls, tokens, etc)
*** [ ] Detect tool call loops
*** [ ] Add stats for the number of tokens in the context and context window limits
*** [ ] Figure out why pricing estimates are all zeroes
** [ ] Create RepoMap node - call into Know with provided prompt
*** [ ] Also create preprocessor
** [ ] Fan-out node - call other defined tools, collect their results and pass concatenated messages to next tool
** [ ] TODO node - collect plan that is formatted with specific syntax (markdown? function call?)
** [ ] Exec node
*** [ ] Add timeout
*** [ ] Need comprehensive tests
*** [ ] Use containerization / sandboxing framework when available
* [ ] Tools
** [ ] Integrate Know
*** [ ] Figure out how to express 3rd party dependencies and give access
*** [ ] Disable warnings
*** [ ] Add a way to fully disable know so project is not parsed.
** [ ] Add pattern matching rules to auto-approve rule calls
** [ ] Skills
*** [ ] Skill parsers
*** [ ] Generate tool stubs for skills
** [ ] Web client tool
** [ ] Shell tool
*** [ ] Windows shell support
*** [ ] Non-POSIX shell support
*** [ ] PTY support
*** [ ] Containerization / sandboxing
*** [ ] Add timeout
*** [ ] Add streaming output support
** [ ] Parallel tool calling support
** [ ] MCP tool support
*** [ ] Ensure that cwd is passed correctly
** [ ] Add a way to reject tool calling automatically if tools with same parameters were already called
** [ ] Figure out sandboxing
*** [ ] Wrap stdio MCP servers in sandbox
*** [ ] Wrap shell tool in sandbox
** [ ] Apply patch tool - useful for fully-agentic loops
